<?php

// blocks
define('NEWSWIRE_DEFAULT_ITEMS', 20);
define('IMCVIEWS_OTHERPRESS_BLOCK_DEFAULT_ITEMS', 4);

define('IMCVIEWS_DEFAULT_FRONT_FIRST_TID', 19);
define('IMCVIEWS_DEFAULT_FRONT_SECTION_ARTICLE_MAX_AGE_WEEKS', 12);
define('IMCVIEWS_DEFAULT_FRONT_MIN_FIRST', 5);
define('IMCVIEWS_DEFAULT_FRONT_MAX_FIRST', 8);


define('OTHERPRESS_TID',24); // dirty dirty dirty
define('IMCVIEWS_FRONT_MAX_CATS', 10);

define('ALL_NEWSWIRE_QUERY',
	'SELECT n.nid FROM {node} n WHERE n.type = "story" AND n.status = 1
	AND NOT EXISTS (SELECT * FROM {term_node} t WHERE n.nid = t.nid AND n.vid = t.vid AND t.tid = '.OTHERPRESS_TID.')
	ORDER BY created DESC');

define('NEWSWIRE_QUERY',
	'SELECT n.nid FROM {node} n WHERE n.type = "story" AND n.promote = 0 AND n.status = 1
	AND NOT EXISTS (SELECT * FROM {term_node} t WHERE n.nid = t.nid AND n.vid = t.vid AND t.tid = '.OTHERPRESS_TID.')
	ORDER BY created DESC');

define('NEWSWIRE_QUERY_HIDDEN',
	'SELECT n.nid FROM {node} n
	 INNER JOIN {imc_node_moderation} nmod
	 	ON n.nid = nmod.nid AND nmod.status = 1
	WHERE n.type = "story" AND n.status = 0 ORDER BY created DESC');

define('IMCVIEWS_OTHERPRESS_BLOCK_QUERY',
	'SELECT DISTINCT n.nid FROM {node} n
	WHERE n.type = "story" AND n.status = 1
	AND EXISTS (SELECT * FROM {term_node} t WHERE n.nid = t.nid AND n.vid = t.vid AND t.tid = '.OTHERPRESS_TID.')
	ORDER BY n.sticky DESC, n.created DESC');

function imcviews_perm() {
	return array('administer imcviews');
}

function _imcviews_node_has_images($nid) {
	return db_result(db_query("SELECT EXISTS (SELECT * FROM {node} n 
		INNER JOIN {upload} u ON u.nid=n.nid
		INNER JOIN {files} f ON f.fid=u.fid
		WHERE n.nid=%d AND LEFT(f.filemime,6)='image/')", $nid));
}

function imcviews_gen_newswire_block($nids) {
	$out = "";
	$lastDay = '';
	$imgpath = drupal_get_path('module', 'imcviews');
	$img_text = url($imgpath.'/text_small.gif');
	$img_photo = url($imgpath.'/photo_small.gif');
	foreach ($nids as $nid) {
		$node = node_load($nid);
		$newDay = format_date($node->created, 'custom', 'Ydm');
		if ($newDay != $lastDay) {
			if ($lastDay) { $out .= '</div>'; }
			$out .= '<div class="newswire-day">';
			$out .= theme('imcviews_newswire_date', $node->created);
			$lastDay = $newDay;
		}
		if (_imcviews_node_has_images($node->nid))
			$out .= theme('imcviews_newswire_item', $node, $img_photo);
		else
			$out .= theme('imcviews_newswire_item', $node, $img_text);
	}
	if ($lastDay) $out .= '</div>';
	return $out ? $out : "No articles";
}

/**
* Generate HTML for the newswire block
* @param op the operation from the URL
* @param delta offset
* @returns block HTML
*/
function imcviews_block($op='list', $delta=0) {
	// listing of blocks, eg admin page
	if ($op == 'list') {
		$block[0]["info"] = t('Newswire (un-promoted articles)');
		$block[1]['info'] = t('IMC RSS Feeds');
		$block[1]['cache'] = BLOCK_NO_CACHE;
		$block[2]["info"] = t('Other Press');
		$block[3]["info"] = t('All articles');
		//$block[0]['cache'] = BLOCK_CACHE_PER_ROLE; // default
		return $block;
	} else if ($op == 'view') {
		if ($delta == 0) {
			$limitnum = variable_get("imcviews_maxdisp", NEWSWIRE_DEFAULT_ITEMS);
			$q = db_query(NEWSWIRE_QUERY.' LIMIT '.$limitnum);
			$nids = array();
			while ($nid = db_result($q)) $nids[] = $nid;
			$out = imcviews_gen_newswire_block($nids);
			$out .= '<div class="imcviews_link">'.l(t("More articles"),'newswire').'</div>';
			$out .= '<div class="imcviews_link">'.l(t("Hidden articles"),'newswire/hidden').'</div>';
			
			$block['subject'] = l(t('Newswire'), 'newswire'); 
			$block['content'] = $out;
			return $block;
		} else if ($delta == 1) {
			$block['subject'] = t('Syndicate');
			$block['content'] = '<p />'.theme('feed_icon', url('rss/features.xml'), t('Features feed')).' Features'.
					    '<p />'.theme('feed_icon', url('rss/newswire.xml'), t('Newswire feed')).' Newswire';
			return $block;
		} else if ($delta == 2) {
			$limitnum = variable_get("imcviews_otherpress_block_max_items", IMCVIEWS_OTHERPRESS_BLOCK_DEFAULT_ITEMS);
			$q = db_query(IMCVIEWS_OTHERPRESS_BLOCK_QUERY.' LIMIT '.$limitnum);

			$nids = array();
			while ($nid = db_result($q)) $nids[] = $nid;
			$out = imcviews_gen_newswire_block($nids);
			
			$out .= l(t('More ...'), 'taxonomy/term/'.OTHERPRESS_TID);

			$block['subject'] = t('Other Press'); 
			$block['content'] = $out;
			return $block;
		} else if ($delta == 3) {
			$limitnum = variable_get("imcviews_maxdisp", NEWSWIRE_DEFAULT_ITEMS);
			$q = db_query(ALL_NEWSWIRE_QUERY.' LIMIT '.$limitnum);
			$nids = array();
			while ($nid = db_result($q)) $nids[] = $nid;
			$out = imcviews_gen_newswire_block($nids);
			$out .= '<div class="imcviews_link">'.l(t("Hidden articles"),'newswire/hidden').'</div>';
			
			$block['subject'] = t('Articles'); 
			$block['content'] = $out;
			return $block;
		}
	}
}

function imcviews_theme() {
	return array(
		'imcviews_newswire_item' => array(
			'arguments' => array('node' => NULL, 'imgpath' => NULL),
			'template' => 'imcviews-newswire-item',
		),
		'imcviews_newswire_date' => array(
			'arguments' => array('created' => NULL),
			'template' => 'imcviews-newswire-date',
		),
		'imcviews_admin_front_sections' => array(
			'arguments' => array('form' => array()),
		),
	);
}

function template_preprocess_imcviews_newswire_item(&$variables) {
	//if (!$variables['node']) return; 
	if ($variables['node']->title == "")
		$variables['title'] = "<untitled>";
	else $variables['title'] = $variables['node']->title;
	$variables['created'] = $variables['node']->created;
}

function imcviews_admin() {

	$q = db_query("SELECT format,name FROM {filter_formats}");
	$options = array();
	while ($a = db_fetch_array($q)) {
		$options[$a['format']] = $a['name'];
	}
	$form['misc']['imcviews_teaser_filter'] = array(
		'#type' => 'select',
		'#title' => 'Filter article node teasers with',
		'#options' => $options,
		'#default_value' => variable_get('imcviews_teaser_filter', 0),
	);
	$q = db_query("SELECT * FROM {imagecache_preset}");
	$options = array();
	while ($a = db_fetch_array($q)) {
		$options[$a['presetname']] = $a['presetname'];
	}
	$form['misc']['imcviews_teaser_imagecache_preset'] = array(
		'#type' => 'select',
		'#title' => 'Display teaser article images using this imagecache preset',
		'#options' => $options,
		'#default_value' =>
		variable_get('imcviews_teaser_imagecache_preset', ''),
	);
	$form['blocks'] = array(
		'#type' => 'fieldset',
		'#title' => t('Sidebar (block) configuration'),
		'#collapsible' => TRUE,
	);
	$form['blocks']['imcviews_maxdisp'] = array(
		'#type' => 'textfield',
		'#title' => t('Maximum number of items shown in the newswire block'),
		'#default_value' => variable_get('imcviews_maxdisp', NEWSWIRE_DEFAULT_ITEMS),
		'#size' => 2,
		'#maxlength' => 2,
		'#description' => t("The maximum number of items to display in the newswire block.")
	);
	$form['blocks']['imcviews_otherpress_block_max_items'] = array(
		'#type' => 'textfield',
		'#title' => t('Number of items shown in the Other Press block'),
		'#default_value' => variable_get('imcviews_otherpress_block_max_items', IMCVIEWS_OTHERPRESS_BLOCK_DEFAULT_ITEMS),
		'#size' => 2,
		'#maxlength' => 2,
		'#description' => t("The maximum number of items to display in the other press block.")
	);

	$form['front'] = array(
		'#type' => 'fieldset',
		'#title' => t('Front page'),
		'#collapsible' => TRUE,
	);
	$form['front']['imcviews_front_first_tid'] = array(
		'#type' => 'select',
		'#title' => t('Category of headline articles'),
		'#multiple' => FALSE,
		'#default_value' => variable_get('imcviews_front_first_tid', IMCVIEWS_DEFAULT_FRONT_FIRST_TID),
		'#options' => taxonomy_form_all(FALSE),
		'#description' => t('What types of articles should appear at the top of the front page')
	);

	$form['front']['imcviews_front_min_first'] = array(
		'#type' => 'textfield',
		'#title' => t('Minimum number of headlining articles'),
		'#default_value' => variable_get('imcviews_front_min_first', IMCVIEWS_DEFAULT_FRONT_MIN_FIRST),
		'#size' => 3,
		'#maxlength' => 3,
	);
	$form['front']['imcviews_front_max_first'] = array(
		'#type' => 'textfield',
		'#title' => t('Maximum number of headlining articles'),
		'#default_value' => variable_get('imcviews_front_max_first', IMCVIEWS_DEFAULT_FRONT_MAX_FIRST),
		'#size' => 3,
		'#maxlength' => 3,
	);

	$form['front']['imcviews_front_section_article_max_age_weeks'] = array(
		'#type' => 'textfield',
		'#title' => t('Maximum age of section articles (in weeks)'),
		'#default_value' => variable_get('imcviews_front_section_article_max_age_weeks', IMCVIEWS_DEFAULT_FRONT_SECTION_ARTICLE_MAX_AGE_WEEKS),
		'#size' => 4,
		'#maxlength' => 8,
	);

	return system_settings_form($form);
}

function imcviews_feature_rssfeed() {
	$headline_tid = variable_get('imcviews_front_first_tid', IMCVIEWS_DEFAULT_FRONT_FIRST_TID);
	// News only (tid=19)
	$q = db_query("SELECT n.nid FROM {node} n
			WHERE n.type = 'story' AND n.status = 1 AND n.promote=1
			AND EXISTS (SELECT * FROM {term_node} t WHERE n.nid = t.nid AND n.vid = t.vid AND t.tid = ".$headline_tid.")
			ORDER BY n.created DESC LIMIT %d", variable_get('feed_default_items', 10));
	$nids = array();
	while ($nid = db_result($q)) $nids[] = $nid;
	node_feed($nids, array('link' => url('rss/features.1-0.rdf', array('absolute'=>TRUE)),
				'title' => t('Indymedia Scotland Features RSS Feed')));
}

function imcviews_newswire_rssfeed() {
	// All but otherpress
	$q = db_query("SELECT n.nid FROM {node} n
			WHERE n.type = 'story' AND n.status = 1 AND n.promote=0
			AND NOT EXISTS (SELECT * FROM {term_node} t WHERE n.nid = t.nid AND n.vid = t.vid AND t.tid = ".OTHERPRESS_TID.")
			ORDER BY n.created DESC LIMIT %d", variable_get('feed_default_items', 10));
	$nids = array();
	while ($nid = db_result($q)) $nids[] = $nid;
	node_feed($nids, array('link' => url('rss/newsfeed.1-0.rdf', array('absolute'=>TRUE)),
				'title' => t('Indymedia Scotland Newswire RSS Feed')));
}

function imcviews_menu() {
	$items = array();

	// rss feeds
	$items['rss/features.xml'] = array(
		'title' => t('Indymedia Scotland Features RSS Feed'),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'page callback' => 'imcviews_feature_rssfeed',
	);
	$items['rss/newswire.xml'] = array(
		'title' => t('Indymedia Scotland Newswire RSS Feed'),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'page callback' => 'imcviews_newswire_rssfeed',
	);

	// same, preserving old dada rss urls :)
	$items['rss/features.1-0.rdf'] = array(
		'title' => t('Indymedia Scotland Features RSS Feed'),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'page callback' => 'imcviews_feature_rssfeed',
	);
	$items['rss/newsfeed.1-0.rdf'] = array(
		'title' => t('Indymedia Scotland Newswire RSS Feed'),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'page callback' => 'imcviews_newswire_rssfeed',
	);

	$items['admin/settings/imcviews'] = array(
		'title' => 'Indymedia views (newswire, front page) settings',
		'description' => '',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('imcviews_admin'),
		'access arguments' => array('administer imcviews'),
	);
	
	$items['newswire'] = array(
		'title' => 'Newswire',
		'page callback' => 'imcviews_newswire_visible',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);

	$items['front'] = array(
		'title' => '',
		'page callback' => 'imcviews_front',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);

	$items['newswire/hidden'] = array(
		'title' => 'Newswire (hidden articles)',
		'page callback' => 'imcviews_newswire_hidden',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);

	return $items;
}

define('IMCVIEWS_FRONT_QUERY',
	'SELECT DISTINCT n.nid FROM {node} n
	WHERE n.type = "story" AND n.promote = 1 AND n.status = 1
	AND EXISTS (SELECT * FROM {term_node} t WHERE n.nid = t.nid AND n.vid = t.vid AND t.tid = %d)
	ORDER BY n.sticky DESC, n.created DESC LIMIT 16');

function imcviews_front() {
	$headline_tid = variable_get('imcviews_front_first_tid', IMCVIEWS_DEFAULT_FRONT_FIRST_TID);
	// show visible but not front page articles
	$q = db_query(IMCVIEWS_FRONT_QUERY, $headline_tid); 

	// need to omit otherpress from main news

	$main_nids = array();
	while ($nid = db_result($q)) {
		$main_nids[] = $nid;
	}

	$min = variable_get('imcviews_front_min_first', IMCVIEWS_DEFAULT_FRONT_MIN_FIRST);
	$max = variable_get('imcviews_front_max_first', IMCVIEWS_DEFAULT_FRONT_MAX_FIRST);
	$news_num = $max;

	$out = '<table class="front-feats" style="clear: both;">';

	// first feature is big
	if ($nid = reset($main_nids)) {
		$node = node_load(array('nid'=>$nid));
		$out .= '<tr><td colspan="2"><div class="headline-node">'.node_view($node, TRUE, FALSE, TRUE)."</div></td><tr>";
	}

	// the rest in 2 cols
	$count = 0;
	$news_num-=2;
	while ($nid = next($main_nids)) {
		if (!($count & 1)) $out .= '<tr>';
		$node = node_load(array('nid'=>$nid));
		$out .= '<td valign="top" class="front-node-teaser-'.($count&1 ? 'right' : 'left').'">'.node_view($node, TRUE, FALSE, TRUE).'</td>';
		if ($count & 1) $out .= '</tr>';
		$count++;
		if (--$news_num < 0) break;
	}

	$out .= "</table>";
	
	return $out;
}

function imcviews_newswire_visible() {
	// show visible but not front page articles
	$q = pager_query(db_rewrite_sql(NEWSWIRE_QUERY), NEWSWIRE_DEFAULT_ITEMS, 0);

	$out = "";
	while ($nid = db_fetch_array($q)) {
		$node = node_load(array('nid'=>$nid['nid']));
		$out .= node_view($node, TRUE, FALSE, TRUE);
	}
	$out .= theme('pager', NULL, 10);
	
	return $out;
}

function imcviews_newswire_hidden() {
	// show visible but not front page articles
	$q = pager_query(db_rewrite_sql(NEWSWIRE_QUERY_HIDDEN), NEWSWIRE_DEFAULT_ITEMS, 0);

	$out = "";
	while ($nid = db_fetch_array($q)) {
		$node = node_load(array('nid'=>$nid['nid']));
		$out .= node_view($node, TRUE, FALSE, TRUE);
	}
	$out .= theme('pager', NULL, 10);
	
	return $out;
}

